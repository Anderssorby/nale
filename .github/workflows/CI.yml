name: "CI"
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  # deployments permission to deploy GitHub pages website
  deployments: write
  # contents permission to update benchmark contents in gh-pages branch
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Nix Cache
      uses: actions/cache@v3
      with:
        path: nix-store-cache
        key: nix-store-cache-${{ github.sha }}
        # fall back to (latest) previous cache
        restore-keys: |
          nix-store-cache
    - run: |
        cp -r nix-store-cache nix-store-cache-copy || true
    - uses: cachix/install-nix-action@v18
      with:
        # https://github.com/NixOS/nix/issues/6572
        install_url: https://releases.nixos.org/nix/nix-2.7.0/install
        extra_nix_config: |
          substituters = file://${{ github.workspace }}/nix-store-cache-copy?priority=10&trusted=true https://cache.nixos.org/
    - name: Install Cachix
      uses: cachix/cachix-action@v12
      with:
        name: lean4
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        skipPush: true  # we push specific outputs only
    - name: Build
      id: build
      run: |
        nix flake lock --update-input lake2nix  # HACK
        nix build ./lake2nix -Lvo push
        nix build . -Lv
      shell: nix run .#ciShell -- bash -euxo pipefail {0}
    - name: Push to Cachix
      run: |
        [ -z "${{ secrets.CACHIX_AUTH_TOKEN }}" ] || cachix push -j4 lean4 ./push* || true
    - name: Rebuild Nix Store Cache
      run: |
        rm -rf nix-store-cache || true
        nix copy ./push* ./result ./lake2nix#lean-all --to file://$PWD/nix-store-cache?compression=none
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: nale-bin
        path: result/bin

  bench:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          path: nale-bin
      - name: Bench
        run: |
          set -x
          ln -s nale-bin/nale-bin/nix-portable ./nix
          chmod u+x ./nix
          export PATH=$PWD:$PATH
          bench() { \time -f "$1,%e,%M" -ao ${{ github.workspace }}/times.csv "${@:2}"; }
          bench "Initial build" nix build nale+github:leanprover-community/mathlib4/5f78e345#Mathlib.mods.\"Mathlib.Tactic.NormNum\" --override-input lean github:Kha/lean4/nale -v
          bench "No=op rebuild" nix build nale+github:leanprover-community/mathlib4/5f78e345#Mathlib.mods.\"Mathlib.Tactic.NormNum\" --override-input lean github:Kha/lean4/nale -v
          nix flake clone nale+github:leanprover-community/mathlib4 --dest mathlib4
          cd mathlib4
          git checkout 5f78e345
          bench "Checkout rebuild" nix build nale+git+file:$PWD#Mathlib.mods.\"Mathlib.Tactic.NormNum\" --override-input lean github:Kha/lean4/nale -v
          echo >> README.md
          bench "Rebuild after unrelated change" nix build nale+git+file:$PWD#Mathlib.mods.\"Mathlib.Tactic.NormNum\" --override-input lean github:Kha/lean4/nale -v
          cd ..
          cat times.csv
          jq -Rsn '[inputs | . / "\n" | (.[] | select(length > 0) | . / ",") as $input | {"name": $input[0], "unit": "s", "value": $input[1] }]' < times.csv > times.json
          cat times.json
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: customSmallerIsBetter
          output-file-path: times.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
