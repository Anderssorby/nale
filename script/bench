#!/usr/bin/env bash

set -e
echo > times.csv

root=$PWD
bench() {
  bytes=$(ifconfig | sed -En 's/RX.*bytes ([0-9]+).*/\1/p' | head -n1)
  \time -f "$1,%e,%M" -ao $root/times.csv "${@:2}"
  bytes2=$(ifconfig | sed -En 's/RX.*bytes ([0-9]+).*/\1/p' | head -n1)
  mb=$(( (bytes2-bytes) / 1000000 ))
  sed -i "\$s/\$/,$mb/" $root/times.csv
}
bench "Initial build" nix-portable nix build nale+github:leanprover-community/mathlib4/c4c6eb6#Mathlib.mods.\"Mathlib.Tactic.ToAdditive\"
bench "No=op rebuild" nix-portable nix build nale+github:leanprover-community/mathlib4/c4c6eb6#Mathlib.mods.\"Mathlib.Tactic.ToAdditive\"
nix-portable nix flake clone nale+github:leanprover-community/mathlib4 --dest mathlib4 || true
cd mathlib4
git checkout c4c6eb6
bench "Checkout rebuild" nix-portable nix build nale+git+file:$PWD#Mathlib.mods.\"Mathlib.Tactic.ToAdditive\"
echo >> README.md
bench "Rebuild after unrelated change" nix-portable nix build nale+git+file:$PWD#Mathlib.mods.\"Mathlib.Tactic.ToAdditive\"
cd ..
jq -Rsn '[inputs | . / "\n" | (.[] | select(length > 0) | . / ",") as $input |
  [{"name": $input[0], "unit": "s", "value": $input[1] },
   {"name": "\($input[0]) [RX]", "unit": "MB", "value": $input[3] }]] |
  flatten' < times.csv > times.json
